<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
	<name>ejerciciostema3</name>
	<comment></comment>
	<projects>
	</projects>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.jdt.core.javanature</nature>
	</natures>
</projectDescription>
class camino{
puntos = 0;

imagen de camino;

ruta de imagen del camino;

constructor()
 
}

class casa(){
puntos = 1;


constructor()
}

class castillo(){
puntos = 2;
constructor()
}


class Punto{

constructor (propiedad(objeto), posicionamiento array o valor y x, array hexagonos alrededor, puerto boolean, camino boolean )
}


abstract class propiedad{
puntos;

constructor (Objeto (camino,casa,castillo), propietario)
}

class hexagono {
ladron boolean;

constructor(posicion [], recurso){

}
}

class carta abstract{
constructor (objeto (caballero,pvictoria,reclamo,doscaminos,recurso))


}

class caballero
class punto vic
class reclamo
class doscaminos
class recurso

class jugador{
nombre string

map cartas
propiedades[]`
puntos;

metodo mover ladron(){
}


metodo crear(Objeto (camino,casa,castillo) prop ){
new Propiedad(prop)
}

metodo robar cartas(numero, list<carta> cartas){}
metodo descarte(cartas[], cartasD[])
}
class camino{
puntos = 0;

imagen de camino;

ruta de imagen del camino;

constructor()
 
}

class casa(){
puntos = 1;


constructor()
}

class castillo(){
puntos = 2;
constructor()
}


class Punto{

constructor (propiedad(objeto), posicionamiento array o valor y x, array hexagonos alrededor, puerto boolean, camino boolean )
}


abstract class propiedad{
puntos;

constructor (Objeto (camino,casa,castillo), propietario)
}

class hexagono {
ladron boolean;

constructor(posicion [], recurso){

}
}

class carta abstract{
constructor (objeto (caballero,pvictoria,reclamo,doscaminos,recurso))


}

class caballero
class punto vic
class reclamo
class doscaminos
class recurso

class jugador{
nombre string

map cartas
propiedades[]`
puntos;

metodo mover ladron(){
}


metodo crear(Objeto (camino,casa,castillo) prop ){
new Propiedad(prop)
}

metodo robar cartas(numero, list<carta> cartas){}
metodo descarte(cartas[], cartasD[])
}






